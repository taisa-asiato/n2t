// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way ( in=true, sel=address[9..11], a=r1, b=r2, c=r3, d=r4, e=r5, f=r6, g=r7, h=r8 );
    
    And ( a=r1, b=load, out=rl1 );
    And ( a=r2, b=load, out=rl2 );
    And ( a=r3, b=load, out=rl3 );
    And ( a=r4, b=load, out=rl4 );
    And ( a=r5, b=load, out=rl5 );
    And ( a=r6, b=load, out=rl6 );
    And ( a=r7, b=load, out=rl7 );
    And ( a=r8, b=load, out=rl8 );

    RAM512 ( in=in, load=rl1, address=address[0..8], out=out1 );
    RAM512 ( in=in, load=rl2, address=address[0..8], out=out2 );
    RAM512 ( in=in, load=rl3, address=address[0..8], out=out3 );
    RAM512 ( in=in, load=rl4, address=address[0..8], out=out4 );
    RAM512 ( in=in, load=rl5, address=address[0..8], out=out5 );
    RAM512 ( in=in, load=rl6, address=address[0..8], out=out6 );
    RAM512 ( in=in, load=rl7, address=address[0..8], out=out7 );
    RAM512 ( in=in, load=rl8, address=address[0..8], out=out8 );

    Mux8Way16 ( a=out1, b=out2, c=out3, d=out4, e=out5, f=out6, g=out7, h=out8, sel=address[9..11], out=out );
}
